/// <reference path="../../../node_modules/@angular/material/_theming.scss" />
/// <reference path="_theme_vars.scss" />
@import '../../../node_modules/@angular/material/theming';


// ---------------------------------------
// ---------------- VARS -----------------
// ---------------------------------------

$app-primary-map: (
	1: #{var(--app-prim-1)}, 2:  #{var(--app-prim-2)}, 3:  #{var(--app-prim-3)},
	contrast: (1: #{var(--app-prim-c-1)}, 2:  #{var(--app-prim-c-2)}, 3:  #{var(--app-prim-c-3)})
);
$app-accent-map: (
	1: #{var(--app-acc-1)}, 2:  #{var(--app-acc-2)}, 3:  #{var(--app-acc-3)},
	contrast: (1: #{var(--app-acc-c-1)}, 2:  #{var(--app-acc-c-2)}, 3:  #{var(--app-acc-c-3)})
);

$app-primary: ($app-primary-map, 1, 2, 3);
$app-accent: ($app-accent-map, 1, 2, 3);

// ---------------------------------------
// ---------------- MXINS ----------------
// ---------------------------------------

@function mat-color($palette, $hue: default, $opacity: null) {
	// If hueKey is a number between zero and one, then it actually contains an
	// opacity value, so recall this function with the default hue and that given opacity.
	@if type-of($hue) == number and $hue >= 0 and $hue <= 1 {
		@return mat-color($palette, default, $hue);
	}
	$color: map-get($palette, $hue);
	@if $opacity == null {
		@return $color;
	}
	@return rgba($color, opacity($color));
}


// ---------------------------------------
// ---------------- MXINS ----------------
// ---------------------------------------


@mixin mat-menu-theme($theme) {
	$background: map-get($theme, background);
	$foreground: map-get($theme, foreground);

	.mat-menu-panel {
		background: #{var(--color-material)};
	}

	.mat-menu-item {
		background: transparent;
		color: mat-color($foreground, 'text');

		&[disabled] {
			color: mat-color($foreground, 'disabled');
		}
	}

	.mat-menu-item .mat-icon:not([color]),
	.mat-menu-item-submenu-trigger::after {
		color: mat-color($foreground, 'icon');
	}

	.mat-menu-item:hover,
	.mat-menu-item.cdk-program-focused,
	.mat-menu-item.cdk-keyboard-focused,
	.mat-menu-item-highlighted {
		&:not([disabled]) {
			background: mat-color($background, 'hover');
		}
	}
}

@mixin mat-snack-bar-theme($theme) {
	$is-dark-theme: map-get($theme, is-dark);
	$accent: map-get($theme, accent);

	.mat-snack-bar-container {
		background: if($is-dark-theme, var(--color-material), #323232);
		color: var(--color-text);
	}

	.mat-simple-snackbar-action {
		color: if($is-dark-theme, inherit, mat-color($accent));
	}
}

@mixin mat-table-theme($theme) {
	$background: map-get($theme, background);
	$foreground: map-get($theme, foreground);

	.mat-header-row {
		background: mat-color($background, 'card');
	}

	.mat-row, .mat-header-row {
		border-bottom-color: mat-color($foreground, divider);
	}

	.mat-header-cell {
		color: mat-color($foreground, secondary-text);
	}

	.mat-cell {
		color: mat-color($foreground, text);
	}
} 



@mixin mat-sidenav-theme($theme) {
	$primary: map-get($theme, primary);
	$accent: map-get($theme, accent);
	$warn: map-get($theme, warn);
	$background: map-get($theme, background);
	$foreground: map-get($theme, foreground);

	$drawer-backdrop-color: rgba(0,0,0,0.7);
	$drawer-background-color: mat-color($background, dialog) !default;
	$drawer-container-background-color: mat-color($background, background) !default;
	$drawer-push-background-color: mat-color($background, dialog) !default;

	.mat-drawer-container {
		background-color: $drawer-container-background-color;
		color: mat-color($foreground, text);
	}

	.mat-drawer {
		background-color: $drawer-background-color;
		color: mat-color($foreground, text);

		&.mat-drawer-push {
			background-color: $drawer-push-background-color;
		}
	}

	.mat-drawer-backdrop.mat-drawer-shown {
		background-color: $drawer-backdrop-color;
	}
}



@mixin mat-form-field-theme($theme) {
	$primary: map-get($theme, primary);
	$accent: map-get($theme, accent);
	$warn: map-get($theme, warn);
	$background: map-get($theme, background);
	$foreground: map-get($theme, foreground);
	$is-dark-theme: map-get($theme, is-dark);

	// Label colors. Required is used for the `*` star shown in the label.
	$label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));
	$focused-label-color: mat-color($primary);
	$required-label-color: mat-color($primary);

	// Underline colors.
	$underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));
	$underline-color-accent: mat-color($accent);
	$underline-color-warn: mat-color($warn);
	$underline-focused-color: mat-color($primary);

	.mat-form-field-label {
		color: $label-color;
	}

	.mat-hint {
		color: $label-color;
	}

	.mat-form-field.mat-focused .mat-form-field-label {
		color: $focused-label-color;

		&.mat-accent {
			color: $underline-color-accent;
		}

		&.mat-warn {
			color: $underline-color-warn;
		}
	}

	.mat-focused .mat-form-field-required-marker {
		color: $required-label-color;
	}

	.mat-form-field-ripple {
		background-color: $underline-color-base;
	}

	.mat-form-field.mat-focused {
		.mat-form-field-ripple {
			background-color: $underline-focused-color;

			&.mat-accent {
				background-color: $underline-color-accent;
			}

			&.mat-warn {
				background-color: $underline-color-warn;
			}
		}
	}
	// Styling for the error state of the form field. Note that while the same can be
	// achieved with the ng-* classes, we use this approach in order to ensure that the same
	// logic is used to style the error state and to show the error messages.
	.mat-form-field.mat-form-field-invalid {
		.mat-form-field-label {
			color: $underline-color-warn;

			&.mat-accent,
			.mat-form-field-required-marker {
				color: $underline-color-warn;
			}
		}

		.mat-form-field-ripple,
		.mat-form-field-ripple.mat-accent {
			background-color: $underline-color-warn;
		}
	}

	.mat-error {
		color: $underline-color-warn;
	}

	@include mat-form-field-standard-theme($theme);
	@include mat-form-field-outline-theme($theme);
}



// ---------------------------------------
// ---------------- THEME ----------------
// ---------------------------------------


$custom-dark-theme-background: (
	status-bar: black,
	app-bar: map_get($mat-grey, 900),
	background: var(--color-text), /* Checkbox ticks etc */
	hover: rgba(white, 0.04),
	card: var(--color-material),
	dialog: var(--color-material),
	disabled-button: rgba(white, 0.12),
	raised-button: map-get($mat-grey, 800),
	focused-button: $light-focused,
	selected-button: map_get($mat-grey, 900),
	selected-disabled-button: map_get($mat-grey, 800),
	disabled-button-toggle: black,
	unselected-chip: map_get($mat-grey, 700),
	disabled-list-option: black,
);

$custom-dark-theme-foreground: (
	base:              white,
	divider:           $light-dividers,
	dividers:          $light-dividers,
	disabled:          var(--color-disabled), // $light-disabled-text
	disabled-button:   rgba(white, 0.3),
	disabled-text:     var(--color-disabled), // $light-disabled-text
	hint-text:         var(--color-disabled), // $light-disabled-text
	secondary-text:    $light-secondary-text,
	icon:              white,
	icons:             white,
	text:              var(--color-text),
	slider-min:        white,
	slider-off:        rgba(white, 0.3),
	slider-off-active: rgba(white, 0.3),
);


@function custom-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {
	@return (
		primary: $primary,
		accent: $accent,
		warn: $warn,
		is-dark: true,
		foreground: $custom-dark-theme-foreground,
		background: $custom-dark-theme-background
	);
}


$app-theme: custom-dark-theme(
	mat-palette(nth($app-primary, 1), nth($app-primary, 2), nth($app-primary, 3), nth($app-primary, 4)),
	mat-palette(nth($app-accent,  1), nth($app-accent,  2), nth($app-accent,  3), nth($app-accent,  4))
);



// ---------------------------------------
// --------------- INCLUDE ---------------
// ---------------------------------------



// Core
@include mat-core();

@include mat-core-theme($app-theme);


// Generic
@include mat-button-theme($app-theme);
@include mat-list-theme($app-theme);
@include mat-divider-theme($app-theme);
@include mat-icon-theme($app-theme);

// Forms
@include mat-input-theme($app-theme);
@include mat-form-field-theme($app-theme);
@include mat-checkbox-theme($app-theme);
@include mat-autocomplete-theme($app-theme);

// Layout
// @include mat-card-theme($app-theme);
@include mat-sidenav-theme($app-theme);
@include mat-expansion-panel-theme($app-theme);
@include mat-tabs-theme($app-theme);

// Features
@include mat-snack-bar-theme($app-theme);
@include mat-menu-theme($app-theme);
@include mat-select-theme($app-theme);
@include mat-dialog-theme($app-theme);
@include mat-paginator-theme($app-theme);
@include mat-table-theme($app-theme);

// User Feedback
@include mat-progress-bar-theme($app-theme);
@include mat-progress-spinner-theme($app-theme);
@include mat-tooltip-theme($app-theme);


// This here includes everything.
// @include angular-material-theme($app-theme);